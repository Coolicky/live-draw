<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:controls="clr-namespace:AntFu7.LiveDraw.Controls"
    xmlns:liveDraw="clr-namespace:AntFu7.LiveDraw"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Color x:Key="FakeTransparentColor">#01000000</Color>
    <Color x:Key="TrueTransparentColor">Transparent</Color>
    <Color x:Key="QuarterTransparentGrayColor">#3F727272</Color>
    <Color x:Key="SemitransparentGrayColor">#7F727272</Color>
    <Color x:Key="TriQuarterTransparentGrayColor">#3F727272</Color>
    <Color x:Key="FunctionalButtonBackgroundColor">#7F000000</Color>
    <Color x:Key="FunctionalButtonHoverColor">#7F212121</Color>
    <Color x:Key="FunctionalButtonActiveColor">#7F515151</Color>

    <SolidColorBrush Color="#FF86E238" x:Key="PaintingColor1" />
    <SolidColorBrush Color="#FF38E2A8" x:Key="PaintingColor2" />
    <SolidColorBrush Color="#FF359EC9" x:Key="PaintingColor3" />
    <SolidColorBrush Color="#FF7E7E7E" x:Key="PaintingColor4" />
    <SolidColorBrush Color="#FFE2CF38" x:Key="PaintingColor5" />
    <SolidColorBrush Color="#FF7855D4" x:Key="PaintingColor6" />
    <SolidColorBrush Color="#FFD570C2" x:Key="PaintingColor7" />
    <SolidColorBrush Color="#FFD6D6D6" x:Key="PaintingColor8" />
    <SolidColorBrush Color="#FFE27F38" x:Key="PaintingColor9" />
    <SolidColorBrush Color="#FFDF2828" x:Key="PaintingColor10" />
    <SolidColorBrush Color="#FFE2386D" x:Key="PaintingColor11" />
    <SolidColorBrush Color="#FF1E1E1E" x:Key="PaintingColor12" />

    <SolidColorBrush Color="{StaticResource FakeTransparentColor}" x:Key="FakeTransparent" />
    <SolidColorBrush Color="{StaticResource TrueTransparentColor}" x:Key="TrueTransparent" />
    <SolidColorBrush Color="{StaticResource QuarterTransparentGrayColor}" x:Key="QuarterTransparentGray" />
    <SolidColorBrush Color="{StaticResource SemitransparentGrayColor}" x:Key="SemitransparentGray" />
    <SolidColorBrush Color="{StaticResource TriQuarterTransparentGrayColor}" x:Key="TriQuarterTransparentGray" />
    <SolidColorBrush Color="{StaticResource FunctionalButtonBackgroundColor}" x:Key="FunctionalButtonBackground" />
    <SolidColorBrush Color="{StaticResource FunctionalButtonHoverColor}" x:Key="FunctionalButtonHover" />
    <SolidColorBrush Color="{StaticResource FunctionalButtonActiveColor}" x:Key="FunctionalButtonActive" />

    <Duration x:Key="Duration1">0:0:0:0.1</Duration>
    <Duration x:Key="Duration2">0:0:0:0.2</Duration>
    <Duration x:Key="Duration3">0:0:0:0.3</Duration>
    <Duration x:Key="Duration4">0:0:0:0.4</Duration>
    <Duration x:Key="Duration5">0:0:0:0.5</Duration>
    <Duration x:Key="Duration7">0:0:0:0.7</Duration>
    <Duration x:Key="Duration10">0:0:0:1</Duration>

    <Thickness x:Key="ElementMarginSmall">2</Thickness>
    <Thickness x:Key="ElementMarginMiddle">5</Thickness>
    <Thickness x:Key="ElementMarginLarge">10</Thickness>

    <sys:Double x:Key="ColorPickerSmall">35</sys:Double>
    <sys:Double x:Key="ColorPickerMiddle">55</sys:Double>
    <sys:Double x:Key="ColorPickerLarge">75</sys:Double>

    <CornerRadius x:Key="ColorPickerNormalCorner">18</CornerRadius>
    <CornerRadius x:Key="ColorPickerHoverCorner">12</CornerRadius>

    <FontFamily x:Key="InterfaceFont">Consolas</FontFamily>

    <sys:Double x:Key="VerticalModeFlowPanel">180</sys:Double>
    <sys:Double x:Key="VerticalModeColorPickersPanel">40</sys:Double>
    <sys:Double x:Key="VerticalModeGrip">70</sys:Double>

    <sys:Double x:Key="HorizontalModeFlowPanel">430</sys:Double>
    <sys:Double x:Key="HorizontalModeColorPickersPanel">430</sys:Double>
    <sys:Double x:Key="HorizontalModeGrip">200</sys:Double>

    <ControlTemplate TargetType="{x:Type Slider}" x:Key="SliderHorizontal">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True"
            x:Name="border">
            <Grid>
                <Border
                    Background="#FFB7B7B7"
                    CornerRadius="1"
                    Height="4.0"
                    Margin="5,0"
                    VerticalAlignment="center"
                    x:Name="TrackBackground" />
                <Track x:Name="PART_Track">
                    <Track.Thumb>
                        <Thumb
                            Focusable="False"
                            Foreground="{TemplateBinding Foreground}"
                            Height="13"
                            OverridesDefaultStyle="True"
                            VerticalAlignment="Center"
                            Width="{Binding RelativeSource={RelativeSource Self}, Path=Height}"
                            x:Name="Thumb">
                            <Thumb.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Border Background="#FF6B6B6B" CornerRadius="10" />
                                    </Grid>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard TargetName="Thumb" TargetProperty="Height">
                            <DoubleAnimation Duration="{StaticResource Duration1}" To="16" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard TargetName="Thumb" TargetProperty="Height">
                            <DoubleAnimation Duration="{StaticResource Duration3}" To="13" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type ContentPresenter}" x:Key="ButtonContent">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style TargetType="controls:ActivableButton" x:Key="FunctionalButton">
        <Setter Property="Background" Value="{StaticResource FunctionalButtonBackground}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ActivableButton">
                    <Grid Background="{StaticResource FakeTransparent}">
                        <Border
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            Margin="{StaticResource ElementMarginSmall}">
                            <ContentPresenter Margin="{TemplateBinding Padding}" Style="{StaticResource ButtonContent}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Duration="{StaticResource Duration5}"
                                Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                To="{StaticResource FunctionalButtonHoverColor}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Duration="{StaticResource Duration5}"
                                Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                To="{StaticResource FunctionalButtonBackgroundColor}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsActived" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Duration="{StaticResource Duration5}"
                                Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                To="{StaticResource FunctionalButtonActiveColor}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Duration="{StaticResource Duration5}"
                                Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                To="{StaticResource FunctionalButtonBackgroundColor}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="controls:ColorPicker" x:Key="ColorPicker">
        <Setter Property="Cursor" Value="Pen" />
        <Setter Property="Width" Value="{StaticResource ColorPickerSmall}" />
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=Width}" />
        <Setter Property="Size" Value="Small" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ColorPicker">
                    <Grid Background="{StaticResource FakeTransparent}">
                        <Border
                            Background="{TemplateBinding Background}"
                            CornerRadius="{StaticResource ColorPickerNormalCorner}"
                            Margin="{StaticResource ElementMarginMiddle}"
                            x:Name="ControlBorder">
                            <Path
                                Data="{DynamicResource IconChecked}"
                                Fill="White"
                                Height="0"
                                Stretch="Uniform"
                                x:Name="CheckedIcon" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="ControlBorder" TargetProperty="CornerRadius">
                                        <liveDraw:CornerRadiusAnimation Duration="{StaticResource Duration2}" To="{StaticResource ColorPickerHoverCorner}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="ControlBorder" TargetProperty="CornerRadius">
                                        <liveDraw:CornerRadiusAnimation Duration="{StaticResource Duration4}" To="{StaticResource ColorPickerNormalCorner}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsActived" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="CheckedIcon" TargetProperty="Height">
                                        <DoubleAnimation Duration="{StaticResource Duration1}" To="12" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="CheckedIcon" TargetProperty="Height">
                                        <DoubleAnimation Duration="{StaticResource Duration3}" To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate TargetType="Button" x:Key="ResponseButtonTemplate">
        <Grid Background="{StaticResource FakeTransparent}">
            <Border
                Background="{TemplateBinding Background}"
                CornerRadius="5"
                Height="{Binding Path=Width, RelativeSource={RelativeSource Self}}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Width="0"
                x:Name="BackBorder" />
            <ContentControl Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Duration="{StaticResource Duration3}"
                                From="0"
                                Storyboard.TargetName="BackBorder"
                                Storyboard.TargetProperty="Width"
                                To="20" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Duration="{StaticResource Duration3}"
                                From="20"
                                Storyboard.TargetName="BackBorder"
                                Storyboard.TargetProperty="Width"
                                To="0" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="Button" x:Key="ResponseButton">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Template" Value="{StaticResource ResponseButtonTemplate}" />
    </Style>
    <Style
        BasedOn="{StaticResource ResponseButton}"
        TargetType="Button"
        x:Key="SpinningButton">
        <Setter Property="MaxWidth" Value="360" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Duration="{StaticResource Duration5}"
                                From="360"
                                Storyboard.TargetProperty="MaxWidth"
                                To="540" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Duration="{StaticResource Duration5}"
                                From="360"
                                Storyboard.TargetProperty="MaxWidth"
                                To="540" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>