<UserControl
    d:DataContext="{d:DesignInstance Type=viewModels:ControlViewModel,
                                     IsDesignTimeCreatable=True}"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d"
    x:Class="AntFu7.LiveDraw.Views.ControlView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:controls="clr-namespace:AntFu7.LiveDraw.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:liveDraw="clr-namespace:AntFu7.LiveDraw"
    xmlns:local="clr-namespace:AntFu7.LiveDraw.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:AntFu7.LiveDraw.ViewModels"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Grid
        HorizontalAlignment="Left"
        MinWidth="0"
        VerticalAlignment="Top"
        x:Name="Palette">
        <b:Interaction.Triggers>
            <b:EventTrigger EventName="Palette_MouseLeave">
                <b:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
            </b:EventTrigger>
            <b:EventTrigger EventName="Palette_MouseMove">
                <b:InvokeCommandAction Command="{Binding MouseMoveCommand}" />
            </b:EventTrigger>
            <b:EventTrigger EventName="Palette_MouseUp">
                <b:InvokeCommandAction Command="{Binding MouseUpCommand}" />
            </b:EventTrigger>
        </b:Interaction.Triggers>
        <Grid.RenderTransform>
            <RotateTransform Angle="0" CenterX="265" CenterY="100" x:Name="PaletteRotate" />
        </Grid.RenderTransform>
        <Grid.Effect>
            <DropShadowEffect
                BlurRadius="5"
                Opacity="0.3"
                ShadowDepth="2" />
        </Grid.Effect>
        <Grid>
            <Grid.Resources>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="{StaticResource QuarterTransparentGray}" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="(Background).(SolidColorBrush.Color)">
                                        <ColorAnimation Duration="{StaticResource Duration2}" To="#9F727272" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="(Background).(SolidColorBrush.Color)">
                                        <ColorAnimation Duration="{StaticResource Duration2}" To="#3F727272" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Border
                Height="70"
                HorizontalAlignment="Right"
                Margin="0,0,30,0"
                Visibility="Collapsed"
                Width="20">
                <Border.CornerRadius>
                    <CornerRadius BottomRight="7" TopRight="7" />
                </Border.CornerRadius>
                <Path
                    Data="{StaticResource IconArrow}"
                    Fill="White"
                    HorizontalAlignment="Center"
                    RenderTransformOrigin="0.5,0.5"
                    Stretch="Uniform"
                    VerticalAlignment="Center"
                    Width="9">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="-90" />
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Border>
            <Border
                Height="20"
                HorizontalAlignment="Center"
                Margin="0,0,25,30"
                VerticalAlignment="Bottom"
                Visibility="Collapsed"
                Width="70"
                x:Name="TopDuckingButton">
                <Border.CornerRadius>
                    <CornerRadius BottomLeft="7" BottomRight="7" />
                </Border.CornerRadius>
                <Path
                    Data="{StaticResource IconArrow}"
                    Fill="White"
                    HorizontalAlignment="Center"
                    RenderTransformOrigin="0.5,0.5"
                    Stretch="Uniform"
                    VerticalAlignment="Center"
                    Width="9">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="0" />
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Border>
            <Border
                Height="70"
                HorizontalAlignment="Left"
                Margin="30,0,0,0"
                Visibility="Collapsed"
                Width="20"
                x:Name="RightDockingButton">
                <Border.CornerRadius>
                    <CornerRadius BottomLeft="7" TopLeft="7" />
                </Border.CornerRadius>
                <Path
                    Data="{StaticResource IconArrow}"
                    Fill="White"
                    HorizontalAlignment="Center"
                    RenderTransformOrigin="0.5,0.5"
                    Stretch="Uniform"
                    VerticalAlignment="Center"
                    Width="9">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="90" />
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Border>
        </Grid>
        <Grid
            Margin="50"
            Width="{StaticResource HorizontalModeFlowPanel}"
            x:Name="PaletteFlowPanel">
            <WrapPanel
                HorizontalAlignment="Center"
                Orientation="Horizontal"
                VerticalAlignment="Center"
                x:Name="PaletteFlowInsiderPanel">
                <Grid
                    Margin="0"
                    Width="{StaticResource HorizontalModeColorPickersPanel}"
                    x:Name="BasicButtonPanel">
                    <WrapPanel
                        HorizontalAlignment="Center"
                        Margin="0,0,10,0"
                        Orientation="Vertical"
                        VerticalAlignment="Top">
                        <WrapPanel
                            HorizontalAlignment="Center"
                            Margin="0,0,10,0"
                            Orientation="Horizontal"
                            VerticalAlignment="Top">
                            <Button
                                Background="#338A8A8A"
                                Command="{Binding MinimizeWindowCommand}"
                                Style="{StaticResource SpinningButton}"
                                ToolTip="Minimize"
                                VerticalAlignment="Center"
                                x:Name="MinimizeButton">
                                <Button.RenderTransform>
                                    <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="12.5" CenterY="12.5" />
                                </Button.RenderTransform>
                                <Path
                                    Data="{DynamicResource IconMinimize}"
                                    Margin="0,0,0,0"
                                    Width="12" />
                            </Button>
                            <Button
                                Background="#338A8A8A"
                                Command="{Binding DetailToggleCommand}"
                                Style="{StaticResource ResponseButton}"
                                ToolTip="Toggle more options"
                                VerticalAlignment="Center">
                                <Path
                                    Data="{DynamicResource IconArrow}"
                                    Margin="0,0,1,1"
                                    Width="10">
                                    <Path.RenderTransform>
                                        <RotateTransform x:Name="DetailToggleRotate" />
                                    </Path.RenderTransform>
                                </Path>
                            </Button>
                            <Button
                                Background="#338A8A8A"
                                Command="{Binding CloseWindowCommand}"
                                Style="{StaticResource SpinningButton}"
                                ToolTip="Exit"
                                VerticalAlignment="Center"
                                x:Name="CloseButton">
                                <Path
                                    Data="{DynamicResource IconCross}"
                                    Margin="0,0,1,1"
                                    Width="10" />
                            </Button>
                        </WrapPanel>
                        <Border
                            Cursor="SizeAll"
                            Height="25"
                            HorizontalAlignment="Center"
                            Margin="0"
                            Padding="3"
                            VerticalAlignment="Top"
                            Width="150"
                            x:Name="PaletteGrip">
                            <Border Background="#338A8A8A" CornerRadius="5">
                                <TextBlock
                                    FontFamily="Consolas"
                                    FontSize="10"
                                    Foreground="White"
                                    HorizontalAlignment="Center"
                                    Margin="0"
                                    VerticalAlignment="Center"
                                    x:Name="InfoBox" />
                            </Border>
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="PaletteGrip_MouseDown">
                                    <b:InvokeCommandAction Command="{Binding MouseDownCommand}" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </Border>
                    </WrapPanel>
                </Grid>
                <Grid
                    HorizontalAlignment="Center"
                    Margin="{StaticResource ElementMarginMiddle}"
                    VerticalAlignment="Center"
                    Width="{StaticResource HorizontalModeColorPickersPanel}"
                    x:Name="ColorPickersPanel">
                    <WrapPanel HorizontalAlignment="Center" Margin="0">
                        <WrapPanel.Resources>
                            <Style BasedOn="{StaticResource ColorPicker}" TargetType="controls:ColorPicker">
                                <Setter Property="Size" Value="{Binding ElementName=DefaultColorPicker, Path=Size}" />
                            </Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Orientation" Value="Horizontal" />
                            </Style>
                        </WrapPanel.Resources>
                        <controls:ColorPicker Background="{StaticResource PaintingColor6}" Command="{Binding ColorPickerCommand}">
                            <controls:ColorPicker.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="17.5" CenterY="17.5" />
                            </controls:ColorPicker.RenderTransform>
                        </controls:ColorPicker>
                        <controls:ColorPicker Background="{StaticResource PaintingColor3}" Command="{Binding ColorPickerCommand}">
                            <controls:ColorPicker.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="17.5" CenterY="17.5" />
                            </controls:ColorPicker.RenderTransform>
                        </controls:ColorPicker>
                        <controls:ColorPicker Background="{StaticResource PaintingColor2}" Command="{Binding ColorPickerCommand}">
                            <controls:ColorPicker.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="17.5" CenterY="17.5" />
                            </controls:ColorPicker.RenderTransform>
                        </controls:ColorPicker>
                        <controls:ColorPicker Background="{StaticResource PaintingColor1}" Command="{Binding ColorPickerCommand}">
                            <controls:ColorPicker.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="17.5" CenterY="17.5" />
                            </controls:ColorPicker.RenderTransform>
                        </controls:ColorPicker>
                        <controls:ColorPicker Background="{StaticResource PaintingColor5}" Command="{Binding ColorPickerCommand}">
                            <controls:ColorPicker.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="17.5" CenterY="17.5" />
                            </controls:ColorPicker.RenderTransform>
                        </controls:ColorPicker>
                        <controls:ColorPicker
                            Background="{StaticResource PaintingColor9}"
                            Command="{Binding ColorPickerCommand}"
                            Size="Small"
                            x:Name="DefaultColorPicker">
                            <controls:ColorPicker.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="17.5" CenterY="17.5" />
                            </controls:ColorPicker.RenderTransform>
                        </controls:ColorPicker>
                        <controls:ColorPicker Background="{StaticResource PaintingColor10}" Command="{Binding ColorPickerCommand}">
                            <controls:ColorPicker.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="17.5" CenterY="17.5" />
                            </controls:ColorPicker.RenderTransform>
                        </controls:ColorPicker>
                        <controls:ColorPicker Background="{StaticResource PaintingColor11}" Command="{Binding ColorPickerCommand}">
                            <controls:ColorPicker.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="17.5" CenterY="17.5" />
                            </controls:ColorPicker.RenderTransform>
                        </controls:ColorPicker>
                        <controls:ColorPicker Background="{StaticResource PaintingColor7}" Command="{Binding ColorPickerCommand}">
                            <controls:ColorPicker.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="17.5" CenterY="17.5" />
                            </controls:ColorPicker.RenderTransform>
                        </controls:ColorPicker>
                        <controls:ColorPicker Background="{StaticResource PaintingColor8}" Command="{Binding ColorPickerCommand}">
                            <controls:ColorPicker.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="17.5" CenterY="17.5" />
                            </controls:ColorPicker.RenderTransform>
                        </controls:ColorPicker>
                        <controls:ColorPicker Background="{StaticResource PaintingColor4}" Command="{Binding ColorPickerCommand}">
                            <controls:ColorPicker.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="17.5" CenterY="17.5" />
                            </controls:ColorPicker.RenderTransform>
                        </controls:ColorPicker>
                        <controls:ColorPicker Background="{StaticResource PaintingColor12}" Command="{Binding ColorPickerCommand}">
                            <controls:ColorPicker.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="17.5" CenterY="17.5" />
                            </controls:ColorPicker.RenderTransform>
                        </controls:ColorPicker>
                    </WrapPanel>
                </Grid>
                <StackPanel
                    Margin="0,3,0,0"
                    Width="{Binding ElementName=ColorPickersPanel, Path=ActualWidth}"
                    x:Name="DetailPanel">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <Trigger Property="Opacity" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <Slider
                        Background="{StaticResource FakeTransparent}"
                        Focusable="False"
                        Foreground="#FFBC1919"
                        Height="20"
                        IsMoveToPointEnabled="True"
                        IsSelectionRangeEnabled="True"
                        Maximum="5"
                        Minimum="1"
                        Template="{StaticResource SliderHorizontal}"
                        Value="{Binding TransparencyValue}"
                        Visibility="Visible" />
                    <WrapPanel HorizontalAlignment="Center" x:Name="ButtonPanel">
                        <WrapPanel.Resources>
                            <Style BasedOn="{StaticResource FunctionalButton}" TargetType="controls:ActivableButton">
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Width" Value="32" />
                                <Setter Property="Height" Value="32" />
                            </Style>
                        </WrapPanel.Resources>
                        <controls:ActivableButton
                            Command="{Binding BrushCommand}"
                            ToolTip="Preview"
                            x:Name="BrushSwitchButton">
                            <Border
                                Background="#FFD6D6D6"
                                CornerRadius="10"
                                Height="5"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Width="5"
                                x:Name="BrushPreview" />
                        </controls:ActivableButton>
                        <controls:ActivableButton
                            Command="{Binding LineCommand}"
                            ToolTip="Line Mode"
                            x:Name="LineButton">
                            <Path
                                Data="{DynamicResource IconMinimize}"
                                Height="3"
                                RenderTransformOrigin="0.5,0.5"
                                Stretch="Fill"
                                Width="15">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="-45" />
                                </Path.RenderTransform>
                            </Path>
                        </controls:ActivableButton>
                        <controls:ActivableButton
                            Command="{Binding UndoCommand}"
                            ToolTip="Undo (Z)"
                            x:Name="UndoButton">
                            <controls:ActivableButton.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="16" CenterY="16" />
                            </controls:ActivableButton.RenderTransform>
                            <Path Data="{DynamicResource IconUndo}" />
                        </controls:ActivableButton>
                        <controls:ActivableButton
                            Command="{Binding RedoCommand}"
                            ToolTip="Redo (Y)"
                            x:Name="RedoButton">
                            <controls:ActivableButton.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="16" CenterY="16" />
                            </controls:ActivableButton.RenderTransform>
                            <Path Data="{DynamicResource IconUndo}" RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleX="-1" />
                                </Path.RenderTransform>
                            </Path>
                        </controls:ActivableButton>
                        <controls:ActivableButton
                            Command="{Binding EraseInkCommand}"
                            ToolTip="Toggle eraser mode (E)"
                            x:Name="EraserButton">
                            <controls:ActivableButton.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="16" CenterY="16" />
                            </controls:ActivableButton.RenderTransform>
                            <Path Data="{DynamicResource IconEraser}" />
                        </controls:ActivableButton>
                        <controls:ActivableButton
                            Command="{Binding ClearInkCommand}"
                            ToolTip="Clear screen"
                            x:Name="ClearButton">
                            <controls:ActivableButton.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="16" CenterY="16" />
                            </controls:ActivableButton.RenderTransform>
                            <Path Data="{DynamicResource IconTrashBox}" Width="13" />
                        </controls:ActivableButton>
                        <controls:ActivableButton
                            Command="{Binding PinTopmostCommand}"
                            ToolTip="Topmost"
                            x:Name="PinButton">
                            <controls:ActivableButton.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="16" CenterY="16" />
                            </controls:ActivableButton.RenderTransform>
                            <Path Data="{DynamicResource IconPin}" Width="13" />
                        </controls:ActivableButton>
                        <controls:ActivableButton
                            Command="{Binding QuickSaveInkCommand}"
                            ToolTip="Quick save / Right click to save to file"
                            x:Name="SaveButton">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="PreviewMouseRightButtonDown">
                                    <b:InvokeCommandAction Command="{Binding SaveInkCommand}" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                            <controls:ActivableButton.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="16" CenterY="16" />
                            </controls:ActivableButton.RenderTransform>
                            <Path Data="{DynamicResource IconSave}" Width="13" />
                        </controls:ActivableButton>
                        <controls:ActivableButton
                            Command="{Binding LoadInkCommand}"
                            ToolTip="Load ink from file"
                            x:Name="LoadButton">
                            <controls:ActivableButton.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="16" CenterY="16" />
                            </controls:ActivableButton.RenderTransform>
                            <Path Data="{DynamicResource IconLoad}" Width="14" />
                        </controls:ActivableButton>
                        <controls:ActivableButton
                            Command="{Binding ExportInkCommand}"
                            ToolTip="Export ink to image with transparent / Right click to export to image with screen below"
                            x:Name="ExportButton">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="PreviewMouseRightButtonDown">
                                    <b:InvokeCommandAction Command="{Binding ExportInkWithBackgroundCommand}" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                            <controls:ActivableButton.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="16" CenterY="16" />
                            </controls:ActivableButton.RenderTransform>
                            <Path Data="{DynamicResource IconExport}" />
                        </controls:ActivableButton>
                        <controls:ActivableButton
                            Command="{Binding HideInkCommand}"
                            ToolTip="Hide ink"
                            x:Name="HideButton">
                            <controls:ActivableButton.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="16" CenterY="16" />
                            </controls:ActivableButton.RenderTransform>
                            <Path Data="{DynamicResource IconCloseEye}" />
                        </controls:ActivableButton>
                        <controls:ActivableButton
                            Command="{Binding EnableInkCommand}"
                            ToolTip="Release/Recover the control of drawing"
                            x:Name="EnableButton">
                            <controls:ActivableButton.RenderTransform>
                                <RotateTransform Angle="{Binding MinWidth, ElementName=Palette}" CenterX="16" CenterY="16" />
                            </controls:ActivableButton.RenderTransform>
                            <Path Data="{DynamicResource IconNoAccess}" />
                        </controls:ActivableButton>
                        <controls:ActivableButton
                            Command="{Binding OrientationSwitchCommand}"
                            ToolTip="Rotate dock"
                            x:Name="OrientationButton">
                            <Path Data="{DynamicResource IconMinimize}" RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="90" />
                                </Path.RenderTransform>
                            </Path>
                        </controls:ActivableButton>
                    </WrapPanel>
                </StackPanel>
            </WrapPanel>
        </Grid>
    </Grid>
</UserControl>
